I. üîç Gi·ªõi thi·ªáu Prometheus Architecture
1Ô∏è‚É£ Th√†nh ph·∫ßn ch√≠nh
Th√†nh ph·∫ßn	Vai tr√≤
Prometheus Server	Thu th·∫≠p v√† l∆∞u tr·ªØ metric (time series)
Exporter	Cung c·∫•p metric qua HTTP endpoint /metrics
Alertmanager	G·ª≠i c·∫£nh b√°o (email, Slack, Telegram, v.v.)
Pushgateway	Thu th·∫≠p metric t·ª´ job ng·∫Øn (cron, batch)
Grafana	Hi·ªÉn th·ªã dashboard tr·ª±c quan
2Ô∏è‚É£ Lu·ªìng ho·∫°t ƒë·ªông
[Node Exporter] ‚îÄ‚îê
[MongoDB Exporter] ‚îÄ‚îº‚îÄ‚îÄ‚ñ∂ [Prometheus Server] ‚îÄ‚ñ∂ [Alertmanager]
[Redis Exporter] ‚îÄ‚îÄ‚îò                 ‚îÇ
                                     ‚ñº
                                  [Grafana]

II. ‚öôÔ∏è C√†i ƒë·∫∑t Prometheus (tr√™n Linux)
1Ô∏è‚É£ T·∫£i v√† c√†i ƒë·∫∑t
useradd --no-create-home --shell /bin/false prometheus
wget https://github.com/prometheus/prometheus/releases/latest/download/prometheus.tar.gz
tar xzf prometheus.tar.gz
mv prometheus /usr/local/bin/
mkdir -p /etc/prometheus /var/lib/prometheus
chown -R prometheus:prometheus /etc/prometheus /var/lib/prometheus

2Ô∏è‚É£ File c·∫•u h√¨nh /etc/prometheus/prometheus.yml
global:
  scrape_interval: 15s
  evaluation_interval: 15s

scrape_configs:
  - job_name: 'node'
    static_configs:
      - targets: ['192.168.1.10:9100', '192.168.1.11:9100']

  - job_name: 'mongodb'
    static_configs:
      - targets: ['192.168.1.12:9216']

  - job_name: 'redis'
    static_configs:
      - targets: ['192.168.1.13:9121']

3Ô∏è‚É£ Systemd service
cat <<EOF > /etc/systemd/system/prometheus.service
[Unit]
Description=Prometheus Monitoring
After=network.target

[Service]
User=prometheus
ExecStart=/usr/local/bin/prometheus \
  --config.file=/etc/prometheus/prometheus.yml \
  --storage.tsdb.path=/var/lib/prometheus

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable prometheus --now

III. üìä Node Exporter ‚Äì gi√°m s√°t Linux host
1Ô∏è‚É£ C√†i ƒë·∫∑t Node Exporter
wget https://github.com/prometheus/node_exporter/releases/latest/download/node_exporter.tar.gz
tar -xzf node_exporter.tar.gz
mv node_exporter /usr/local/bin/

2Ô∏è‚É£ Ch·∫°y d∆∞·ªõi systemd
cat <<EOF > /etc/systemd/system/node_exporter.service
[Unit]
Description=Node Exporter
After=network.target

[Service]
ExecStart=/usr/local/bin/node_exporter
User=nobody

[Install]
WantedBy=multi-user.target
EOF

systemctl enable node_exporter --now


Truy c·∫≠p th·ª≠:
üëâ http://<server-ip>:9100/metrics

IV. üì¶ Exporter cho c√°c d·ªãch v·ª• ph·ªï bi·∫øn
Service	Exporter	Default Port	Install
MongoDB	mongodb_exporter	9216	docker run -d --net=host bitnami/mongodb-exporter
Redis	redis_exporter	9121	docker run -d --net=host oliver006/redis_exporter
Nginx	nginx-prometheus-exporter	9113	nginx + stub_status module
Postgres	postgres_exporter	9187	prometheus-community/postgres-exporter
Docker	cAdvisor	8080	docker run -d --net=host google/cadvisor
K8s	kube-state-metrics	8080	Helm chart prometheus-community/kube-prometheus-stack
V. üß© Alertmanager Configuration
1Ô∏è‚É£ File /etc/alertmanager/config.yml
global:
  smtp_smarthost: 'smtp.gmail.com:587'
  smtp_from: 'alert@company.com'
  smtp_auth_username: 'alert@company.com'
  smtp_auth_password: 'xxxxxx'

route:
  receiver: 'mail-team'
  group_wait: 10s
  repeat_interval: 1h

receivers:
  - name: 'mail-team'
    email_configs:
      - to: 'sysadmin@company.com'

2Ô∏è‚É£ V√≠ d·ª• rule c·∫£nh b√°o

File /etc/prometheus/alert.rules.yml:

groups:
  - name: system
    rules:
      - alert: HighCPUUsage
        expr: avg(rate(node_cpu_seconds_total{mode="system"}[5m])) > 0.8
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "CPU usage high on {{ $labels.instance }}"


Th√™m v√†o prometheus.yml:

rule_files:
  - /etc/prometheus/alert.rules.yml
alerting:
  alertmanagers:
    - static_configs:
      - targets: ['localhost:9093']

VI. üìà T√≠ch h·ª£p Grafana
1Ô∏è‚É£ C√†i ƒë·∫∑t nhanh
sudo apt install -y grafana
systemctl enable grafana-server --now

2Ô∏è‚É£ C·∫•u h√¨nh Prometheus datasource

Settings ‚Üí Data Sources ‚Üí Add ‚Üí Prometheus ‚Üí URL: http://localhost:9090

3Ô∏è‚É£ Import dashboard m·∫´u

Node Exporter Full (ID: 1860)

MongoDB Overview (ID: 2583)

Redis Dashboard (ID: 763)

Docker Host Overview (ID: 193)

Kubernetes Cluster Monitoring (ID: 6417)

VII. üß≠ Troubleshooting Prometheus
V·∫•n ƒë·ªÅ	Nguy√™n nh√¢n	Gi·∫£i ph√°p
‚ùå Prometheus kh√¥ng thu th·∫≠p metric	sai port ho·∫∑c firewall ch·∫∑n	Ki·ªÉm tra curl http://target:port/metrics
‚ö†Ô∏è Alert kh√¥ng g·ª≠i	c·∫•u h√¨nh SMTP ho·∫∑c Alertmanager l·ªói	Ki·ªÉm tra journalctl -u alertmanager
üê¢ Prometheus ch·∫≠m	qu√° nhi·ªÅu target ho·∫∑c retention cao	Gi·∫£m scrape_interval, tƒÉng disk IOPS
üìâ Metric m·∫•t d·ªØ li·ªáu	TSDB ƒë·∫ßy ho·∫∑c b·ªã corrupt	D·ªçn /var/lib/prometheus, restart service
üö´ Grafana ‚ÄúNo data‚Äù	sai datasource URL	Xem l·∫°i prometheus.yml v√† localhost:9090
VIII. üß† Best Practices cho Production

‚úÖ D√πng SSD cho th∆∞ m·ª•c d·ªØ li·ªáu /var/lib/prometheus
‚úÖ Gi·ªõi h·∫°n retention time (vd: 15 ng√†y)
‚úÖ S·ª≠ d·ª•ng remote write ƒë·∫øn Thanos / VictoriaMetrics n·∫øu c·∫ßn l∆∞u d√†i h·∫°n
‚úÖ ƒê·∫∑t scrape_interval: 15s, evaluation_interval: 15s
‚úÖ S·ª≠ d·ª•ng relabel_configs ƒë·ªÉ lo·∫°i b·ªè metric th·ª´a
‚úÖ D√πng Kubernetes ServiceMonitor khi ch·∫°y trong cluster
‚úÖ Backup file config (prometheus.yml, alert.rules.yml) ƒë·ªãnh k·ª≥ b·∫±ng GitOps

IX. üß∞ Monitoring Architecture ƒë·ªÅ xu·∫•t (Multi-Site HA)
           ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
           ‚îÇ        Grafana (HA)        ‚îÇ
           ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                          ‚îÇ
       ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
       ‚îÇ                                     ‚îÇ
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                      ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Prometheus  ‚îÇ‚óÄ‚îÄ‚îÄRemote Write‚îÄ‚îÄ‚ñ∂‚îÇ Prometheus  ‚îÇ
‚îÇ (Site A)    ‚îÇ                   ‚îÇ (Site B)    ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò                   ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
      ‚îÇ                                     ‚îÇ
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Node / DB   ‚îÇ                     ‚îÇ Node / DB   ‚îÇ
‚îÇ Exporters   ‚îÇ                     ‚îÇ Exporters   ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò                     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò


üîπ HA setup:
Prometheus ·ªü m·ªói site thu th·∫≠p metric c·ª•c b·ªô ‚Üí replicate v·ªÅ Grafana/Thanos ƒë·ªÉ c√≥ global visibility.
N·∫øu m·ªôt site down ‚Üí h·ªá th·ªëng v·∫´n c√≥ d·ªØ li·ªáu t·ª´ site c√≤n l·∫°i.

X. üîî Alert Template quan tr·ªçng
T√™n	Bi·ªÉu th·ª©c	M·ª©c ƒë·ªô
High CPU	avg(rate(node_cpu_seconds_total{mode!="idle"}[5m])) > 0.9	warning
Low Memory	(node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes) < 0.1	critical
Disk Full	(node_filesystem_avail_bytes / node_filesystem_size_bytes) < 0.15	critical
MongoDB Lag	mongodb_mongod_replset_member_optime_lag_seconds > 30	warning
Redis Down	up{job="redis"} == 0	critical
Node Down	up == 0	critical
