3. Tạo chứng chỉ SSL bằng OpenSSL
3.1. Sinh private key
cd C:\OpenSSL-Win64\bin

openssl genpkey -algorithm RSA -out C:\Apache24\conf\ssl\server.key -pkeyopt rsa_keygen_bits:2048

3.2. Tạo CSR
openssl req -new -key C:\Apache24\conf\ssl\server.key -out C:\Apache24\conf\ssl\server.csr

👉 Nhập thông tin, chú ý:

Common Name (CN) = hostname hoặc IP server (vd: lab.local hay 192.168.1.100).

3.3. Tạo Self-signed Certificate
openssl x509 -req -days 365 -in C:\Apache24\conf\ssl\server.csr -signkey C:\Apache24\conf\ssl\server.key -out C:\Apache24\conf\ssl\server.crt

👉 Giờ có:

server.key
server.crt

4. Cấu hình Apache với SSL
4.1. Mở file cấu hình

Mở C:\Apache24\conf\httpd.conf bằng Notepad.

Bỏ comment 2 dòng sau (xóa dấu #):

LoadModule ssl_module modules/mod_ssl.so
Include conf/extra/httpd-ssl.conf

4.2. Sửa file SSL config

Mở C:\Apache24\conf\extra\httpd-ssl.conf.
Tìm và sửa các dòng sau:

<VirtualHost _default_:443>
    DocumentRoot "C:/Apache24/htdocs"
    ServerName lab.local:443

    SSLEngine on
    SSLCertificateFile "C:/Apache24/conf/ssl/server.crt"
    SSLCertificateKeyFile "C:/Apache24/conf/ssl/server.key"
</VirtualHost>

👉 Lưu ý: Windows dùng / thay cho \ trong đường dẫn.

5. Khởi động Apache
Trong cmd (Administrator):

cd C:\Apache24\bin
httpd -k install
httpd -k start

Nếu muốn restart:
httpd -k restart

6. Kiểm tra kết quả

Mở trình duyệt trên server hoặc client:
https://lab.local/
hoặc
https://<IP-server>/

👉 Trình duyệt sẽ báo certificate not trusted (vì self-signed). Bỏ qua là vào được.


- Apache load balancing
🔹 1. Các phương pháp phân phối (Load Balancing Methods)

Khi khai báo ProxyPass với balancer, bạn có thể chọn thuật toán:

<Proxy "balancer://flaskcluster">
    BalancerMember http://127.0.0.1:5000
    BalancerMember http://127.0.0.1:5001
    ProxySet lbmethod=byrequests
</Proxy>

Các lbmethod có sẵn:

byrequests (default) → Round-robin, chia đều theo số request.

bytraffic → Chia theo dung lượng băng thông (ai ít data thì nhận thêm).

bybusyness → Chia theo số kết nối đang bận (server nào nhàn thì được nhận).

heartbeat → Phù hợp với cluster có health-check nâng cao.

👉 Bạn có thể đổi cách phân phối ngay trong httpd-balancer.conf.

🔹 2. Gán trọng số (Load Balancing Factor)

Có thể định nghĩa server nào mạnh thì nhận nhiều request hơn:

<Proxy "balancer://flaskcluster">
    BalancerMember http://127.0.0.1:5000 loadfactor=1
    BalancerMember http://127.0.0.1:5001 loadfactor=3
    ProxySet lbmethod=byrequests
</Proxy>

→ Kết quả: port 5001 nhận khoảng 75% request, port 5000 chỉ nhận 25%.

🔹 3. Quản lý qua Balancer Manager

Truy cập:
👉 http://localhost:8080/balancer-manager

Tại đây có thể:

Disable/Enable một backend tạm thời.
Thay đổi loadfactor (trọng số) ngay tại runtime.
Check trạng thái worker (Init Ok, Error, Busy…).
Nhưng: cấu hình này không được lưu sau khi restart → chỉ runtime.

🔹 4. Health check (kiểm tra backend sống/chết)

Apache có module mod_proxy_hcheck (nếu bật) để tự động check backend.
Ví dụ cấu hình health check đơn giản:

<Proxy "balancer://flaskcluster">
    BalancerMember http://127.0.0.1:5000 hcmethod=GET hcuri=/ hcexpr=%{REQUEST_STATUS} == 200
    BalancerMember http://127.0.0.1:5001 hcmethod=GET hcuri=/ hcexpr=%{REQUEST_STATUS} == 200
    ProxySet lbmethod=byrequests
</Proxy>


👉 Nếu backend trả lỗi (không phải HTTP 200) thì Apache sẽ tự loại bỏ nó khỏi cluster.

🔹 5. Sticky Session (giữ session về 1 backend)

Dùng khi backend có session theo user (ví dụ login):

<Proxy "balancer://flaskcluster">
    BalancerMember http://127.0.0.1:5000 route=flask1
    BalancerMember http://127.0.0.1:5001 route=flask2
    ProxySet stickysession=JSESSIONID|jsessionid
</Proxy>

👉 Nếu client có cookie JSESSIONID=flask1, request sẽ luôn về backend 5000.

🔹 6. Failover (dự phòng)

Có thể đánh dấu 1 backend là standby, chỉ chạy khi server chính chết:

<Proxy "balancer://flaskcluster">
    BalancerMember http://127.0.0.1:5000
    BalancerMember http://127.0.0.1:5001 status=+H
</Proxy>

status=+H → backend ở chế độ Hot Standby.
→ Bình thường chỉ 5000 nhận request, khi 5000 down thì 5001 mới chạy.

🔹 7. Giới hạn số kết nối / timeout

Có thể cấu hình giới hạn:

<Proxy "balancer://flaskcluster">
    BalancerMember http://127.0.0.1:5000 max=50 retry=30
    BalancerMember http://127.0.0.1:5001 max=50 retry=30
</Proxy>

max=50 → tối đa 50 kết nối đồng thời.
retry=30 → sau 30s thử kết nối lại backend nếu nó từng fail.

✅ Tổng kết

Apache load balancer trong httpd.conf có thể:
Chia tải (round robin, traffic, busyness).
Gán trọng số (server mạnh xử lý nhiều hơn).
Failover khi server chính chết.
Sticky session (giữ user trên cùng backend).
Health-check backend.
Quản lý runtime qua /balancer-manager.


🔹 Bước 1: Stop và disable Apache24 standalone

Apache24 hiện chạy ở C:\Apache24 → stop service này để nó không tranh cổng.

Mở PowerShell (Admin):

# Tìm xem có service Apache24 không
Get-Service *Apache*

# Stop service Apache24 nếu đang chạy
Stop-Service Apache2.4 -Force

# Disable để không tự khởi động lại
Set-Service Apache2.4 -StartupType Disabled


👉 Sau bước này, Apache standalone sẽ không chiếm port nữa.

🔹 Bước 2: Tắt IIS (World Wide Web Publishing Service)

IIS cũng thường chiếm port 80.

Stop-Service W3SVC -Force
Set-Service W3SVC -StartupType Disabled
Stop-Service WAS -Force
Set-Service WAS -StartupType Disabled


👉 Port 80 sẽ được giải phóng hoàn toàn cho XAMPP.
