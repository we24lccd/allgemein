aws s3 ls [s3_link]
aws s3 cp [s3_link] [des]
aws sync [s3_link] [des]

Để xóa toàn bộ bucket và nội dung của bucket, sử dụng lệnh s3 rb với cờ --force:
aws s3 rm s3://bucket-name/doc --recursive

aws s3 rb s3://bucket-name --force

aws ecr create-repository -- repository-name nginx --region us-east-1 
-> Lệnh này sẽ tạo một kho lưu trữ tên "nginx" trong vùng "us-east-1" của AWS ECR. Kho lưu trữ này sẽ được sử dụng để lưu trữ các image container Docker.

1. Creating a Repository:

Bash
aws ecr create-repository --repository-name my-repository

2. Listing Repositories:

Bash
aws ecr describe-repositories

3. Pushing an Image:

Bash
aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin <account-id>.dkr.ecr.us-east-1.amazonaws.com
docker push <account-id>.dkr.ecr.us-east-1.amazonaws.com/my-repository:latest   

4. Pulling an Image:

Bash
docker pull <account-id>.dkr.ecr.us-east-1.amazonaws.com/my-repository:latest

5. Deleting a Repository:

Bash
aws ecr delete-repository --repository-name my-repository --force

Create a Security Group: We’ll need to define a security group to keep things safe.
aws ec2 create-security-group --group-name StorageLabs --description "SG for EFS storage"

Add an Inbound SSH Rule: This allows you to log into your instances for some hands-on fun.
aws ec2 authorize-security-group-ingress --group-name StorageLabs --protocol tcp --port 22 --cidr 0.0.0.0/0

Launch EC2 in US-EAST-1A: Time to start the first instance in AZ 1A.

aws ec2 run-instances --image-id ami-0866a3c8686eaeeba --instance-type t2.micro --placement AvailabilityZone=us-east-1a --security-group-ids sg-00055e6ae2bc876ce

Launch EC2 in US-EAST-1B: Now, fire up the second instance in AZ 1B for redundancy and magic.

aws ec2 run-instances --image-id ami-0866a3c8686eaeeba --instance-type t2.micro --placement AvailabilityZone=us-east-1b --security-group-ids sg-00055e6ae2bc876ce

Add NFS Protocol Rule: To make sure the EC2s and EFS play nicely, add an NFS rule to your security group.
aws ec2 authorize-security-group-ingress --group-id sg-00055e6ae2bc876ce --protocol tcp --port 2049 --source-group sg-00055e6ae2bc876ce

https://www.geeksforgeeks.org/aws-tutorial/?ref=outind

6. aws s3 cp /path/to/local/folder s3://your-bucket-name/destination/path --recursive

*Cách dùng terraform
# Khởi tạo
terraform init

# Kiểm tra cấu hình
terraform plan

# Áp dụng thay đổi
terraform apply

1. Xóa một file cụ thể
aws s3 rm s3://bucket-name/path/to/file.txt

2. Xóa nhiều file cùng lúc

aws s3 rm s3://bucket-name/ --recursive --exclude "*" --include "*.log"

3. Xóa toàn bộ thư mục

aws s3 rm s3://bucket-name/folder/ --recursive

4. Xóa toàn bộ nội dung bucket (cẩn thận!)

aws s3 rm s3://bucket-name/ --recursive

5. Xóa file theo điều kiện thời gian (kết hợp với AWS CLI và shell)

# Xóa các file cũ hơn 30 ngày
aws s3 ls s3://bucket-name/ --recursive | while read -r line; do
  createDate=$(echo $line | awk '{print $1" "$2}')
  createDate=$(date -d "$createDate" +%s)
  olderThan=$(date -d "30 days ago" +%s)
  if [[ $createDate -lt $olderThan ]]; then
    fileName=$(echo $line | awk '{print $4}')
    aws s3 rm "s3://bucket-name/$fileName"
  fi
done
6. Sử dụng file manifest để xóa nhiều file
Tạo file delete.txt:

s3://bucket-name/file1.txt
s3://bucket-name/path/to/file2.jpg
Rồi chạy lệnh:

aws s3api delete-objects --bucket bucket-name --delete file://delete.txt
7. Xóa các file có prefix cụ thể

aws s3 rm s3://bucket-name/prefix/ --recursive
8. Xóa các file version (nếu bucket có versioning)

# Lấy danh sách các version
aws s3api list-object-versions --bucket bucket-name --prefix path/to/file

# Xóa version cụ thể
aws s3api delete-object --bucket bucket-name --key path/to/file --version-id version-id
Lưu ý quan trọng:
Luôn kiểm tra kỹ lệnh trước khi thực thi, đặc biệt với --recursive

Có thể dùng --dryrun để kiểm tra trước khi xóa thật:

aws s3 rm s3://bucket-name/ --recursive --dryrun
Đảm bảo bạn có quyền s3:DeleteObject và s3:DeleteObjectVersion (nếu dùng versioning)

Các file đã xóa không thể khôi phục trừ khi bucket có versioning được bật

Cách an toàn hơn:
Nếu muốn an toàn, có thể di chuyển file sang thư mục "trash" trước khi xóa hẳn:

# Di chuyển file sang thư mục trash
aws s3 mv s3://bucket-name/path/to/file s3://bucket-name/trash/path/to/file

# Sau đó xóa khi đã chắc chắn
aws s3 rm s3://bucket-name/trash/ --recursive
